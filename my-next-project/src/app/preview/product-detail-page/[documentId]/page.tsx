import strapiRequest from "@/utils/request";
import { cache } from "react";
import { Metadata } from "next";
import { map } from "lodash";
import Breadcrumb from "@/utils/breadcrumb";
import ProductPrimaryRow from "@/components/pdp/product-primary-row";
import ProductMainContent from "@/components/pdp/product-main-content";
import getGrowthbook from "@/utils/growthbook";
import { cookies } from "next/headers";

const getPDPLayout = cache(async (documentId: string, profileId: string) => {
  const userContext = { attributes: { id: profileId } };

  const imageSrc = await getGrowthbook().then((client) =>
    client.getFeatureValue("ab_test_pdp_demo", null, userContext)
  );

  const response = await strapiRequest(`/api/product-detail-pages/${documentId}?populate=*`);

  const layout = response.data.data;

  return { layout, imageSrc };
});

type PageParams = { params: Promise<{ documentId: string }> };

export const metadata: Metadata = {
  title: "GC Strapi PDP Demo",
  description: "Generated by create next app",
};

async function ProductListingPage({ params }: PageParams) {
  const { documentId } = await params;

  const cookieStore = await cookies();
  let profileId = cookieStore.get("profile_id")?.value!;

  const { layout, imageSrc } = await getPDPLayout(documentId, profileId);

  if (!layout) {
    return <div className="my-32">can not get layout from strapi.</div>;
  }

  return (
    <div className="space-y-5 mx-auto max-w-[1500px] py-8">
      {map(layout.layout, (section: any) => {
        switch (section.__component) {
          case "shared.breadcrumb":
            return <Breadcrumb key={"shared.breadcrumb" + section.id} />;

          case "pdp.product-primary-row":
            return (
              <ProductPrimaryRow
                key={"pdp.product-primary-row" + section.id}
                imageSrc={imageSrc}
                subLayoutPrimaryRow={layout.subLayoutPrimaryRow}
                subLayoutProductDetail={layout.subLayoutProductDetail}
              />
            );

          case "pdp.product-main-content":
            return (
              <ProductMainContent
                key={"pdp.product-main-content" + section.id}
                subLayoutMainContent={layout.subLayoutMainContent}
              />
            );

          default:
            return null;
        }
      })}
    </div>
  );
}

export default ProductListingPage;
